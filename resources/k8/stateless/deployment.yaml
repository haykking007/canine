apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= service.name %>
  namespace: <%= project.name %>
  labels:
    app: <%= service.name %>
spec:
  replicas: <%= service.replicas %>
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: <%= service.name %>
  template:
    metadata:
      labels:
        app: <%= service.name %>
    spec:
      containers:
      - name: <%= project.name %>
        image: <%= project.container_registry_url %>
        imagePullPolicy: Always
        <% if service.command.present? %>
        command: <%= service.command.split.to_json %>
        <% end %>
        envFrom:
        - configMapRef:
            name: <%= project.name %>
        ports:
        - containerPort: <%= service.container_port %>
        <% if service.healthcheck_url.present? %>
        livenessProbe:
          httpGet:
            path: <%= service.healthcheck_url %>
            port: <%= service.container_port %>
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: <%= service.healthcheck_url %>
            port: <%= service.container_port %>
          initialDelaySeconds: 30
          periodSeconds: 10
        <% end %>
      imagePullSecrets:
      - name: dockerconfigjson-github-com
